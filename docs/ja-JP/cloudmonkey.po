#Licensed to the Apache Software Foundation (ASF) under one
#or more contributor license agreements.  See the NOTICE file
#distributed with this work for additional information
#regarding copyright ownership.  The ASF licenses this file
#to you under the Apache License, Version 2.0 (the
#"License"); you may not use this file except in compliance
#with the License.  You may obtain a copy of the License at
#http://www.apache.org/licenses/LICENSE-2.0
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Apache CloudStack Docs\n"
"POT-Creation-Date: 2013-04-12T11:19:38\n"
"PO-Revision-Date: 2013-04-12 11:47+0000\n"
"Last-Translator: sebgoa <runseb@gmail.com>\n"
"Language-Team: None\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#, no-c-format
msgid "CloudMonkey"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"CloudMonkey is the &PRODUCT; Command Line Interface (CLI). It is written in "
"Python. CloudMonkey can be used both as an interactive shell and as a "
"command line tool which simplifies &PRODUCT; configuration and management. "
"It can be used with &PRODUCT; releases since the 4.0.x branch."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"CloudMonkey is still under development and should be considered a Work In "
"Progress (WIP), the wiki is the most up to date documentation:"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"<ulink url=\"https://cwiki.apache.org/CLOUDSTACK/cloudstack-cloudmonkey-"
"cli.html\">https://cwiki.apache.org/CLOUDSTACK/cloudstack-cloudmonkey-"
"cli.html</ulink>"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Installing CloudMonkey"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"CloudMonkey is dependent on <emphasis>readline, pygments, "
"prettytable</emphasis>, when installing from source you will need to resolve"
" those dependencies. Using the cheese shop, the dependencies will be "
"automatically installed."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"There are three ways to get CloudMonkey. Via the official &PRODUCT; source "
"releases or via a community maintained distribution at <ulink "
"url=\"http://pypi.python.org/pypi/cloudmonkey/\">the cheese shop</ulink>. "
"Developers can also get it directly from the git repository in "
"<emphasis>tools/cli/</emphasis>."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Via the official Apache &PRODUCT; releases as well as the git repository."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"    \n"
"$ git clone https://git-wip-us.apache.org/repos/asf/cloudstack.git # (optional if using a release download)\n"
"$ mvn clean install -P developer\n"
"$ cd tools/cli # cloudmonkey-x.x.x.tar.gz will be built in dist\n"
"$ python setup.py build\n"
"$ python setup.py install\n"
"    \n"
"                    "
msgstr ""

#. Tag: para
#, no-c-format
msgid "Via a community maintained package on Cheese Shop"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "pip install cloudmonkey"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Configuration"
msgstr "構成"

#. Tag: para
#, no-c-format
msgid ""
"To configure CloudMonkey you can edit the ~/.cloudmonkey/config file in the "
"user's home directory as shown below. The values can also be set "
"interactively at the cloudmonkey prompt. Logs are kept in "
"~/.cloudmonkey/log, and history is stored in ~/.cloudmonkey/history. "
"Discovered apis are listed in ~/.cloudmonkey/cache. Only the log and history"
" files can be custom paths and can be configured by setting appropriate file"
" paths in ~/.cloudmonkey/config"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"$ cat ~/.cloudmonkey/config \n"
"[core]\n"
"log_file = /Users/sebastiengoasguen/.cloudmonkey/log\n"
"asyncblock = true\n"
"paramcompletion = false\n"
"history_file = /Users/sebastiengoasguen/.cloudmonkey/history\n"
"\n"
"[ui]\n"
"color = true\n"
"prompt = &gt; \n"
"tabularize = false\n"
"\n"
"[user]\n"
"secretkey =VDaACYb0LV9eNjTetIOElcVQkvJck_J_QljX_FcHRj87ZKiy0z0ty0ZsYBkoXkY9b7eq1EhwJaw7FF3akA3KBQ \n"
"apikey = plgWJfZK4gyS3mOMTVmjUVg-X-jlWlnfaUJ9GAbBbf9EdMkAYMmAiLqzzq1ElZLYq_u38zCm0bewzGUdP66mg\n"
"\n"
"[server]\n"
"path = /client/api\n"
"host = localhost\n"
"protocol = http\n"
"port = 8080\n"
"timeout = 3600\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The values can also be set at the CloudMonkey prompt. The API and secret "
"keys are obtained via the &PRODUCT; UI or via a raw api call."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"$ cloudmonkey\n"
"☁ Apache CloudStack cloudmonkey 4.1.0-snapshot. Type help or ? to list commands.\n"
"\n"
"&gt; set prompt myprompt&gt;\n"
"myprompt&gt; set host localhost\n"
"myprompt&gt; set port 8080\n"
"myprompt&gt; set apikey &lt;your api key&gt;\n"
"myprompt&gt; set secretkey &lt;your secret key&gt;\n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"You can use CloudMonkey to interact with a local cloud, and even with a "
"remote public cloud. You just need to set the host value properly and obtain"
" the keys from the cloud administrator."
msgstr ""

#. Tag: title
#, no-c-format
msgid "API Discovery"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"In &PRODUCT; 4.0.* releases, the list of api calls available will be pre-"
"cached, while starting with &PRODUCT; 4.1 releases and above an API "
"discovery service is enabled. CloudMonkey will discover automatically the "
"api calls available on the management server. The sync command in "
"CloudMonkey pulls a list of apis which are accessible to your user role, "
"along with help docs etc. and stores them in ~/.cloudmonkey/cache. This "
"allows cloudmonkey to be adaptable to changes in mgmt server, so in case the"
" sysadmin enables a plugin such as Nicira NVP for that user role, the users "
"can get those changes. New verbs and grammar (DSL) rules are created on the "
"fly."
msgstr ""

#. Tag: para
#, no-c-format
msgid "To discover the APIs available do:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
" &gt; sync\n"
"324 APIs discovered and cached\n"
"    "
msgstr ""

#. Tag: title
#, no-c-format
msgid "Tabular Output"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The number of key/value pairs returned by the api calls can be large "
"resulting in a very long output. To enable easier viewing of the output, a "
"tabular formatting can be setup. You may enable tabular listing and even "
"choose set of column fields, this allows you to create your own field using "
"the filter param which takes in comma separated argument. If argument has a "
"space, put them under double quotes. The create table will have the same "
"sequence of field filters provided"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To enable it, use the <emphasis>set</emphasis> function and create filters "
"like so:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"&gt; set tabularize true\n"
"&gt; list users filter=id,domain,account\n"
"count = 1\n"
"user:\n"
"+--------------------------------------+--------+---------+\n"
"|                  id                  | domain | account |\n"
"+--------------------------------------+--------+---------+\n"
"| 7ed6d5da-93b2-4545-a502-23d20b48ef2a |  ROOT  |  admin  |\n"
"+--------------------------------------+--------+---------+\n"
"    "
msgstr ""

#. Tag: title
#, no-c-format
msgid "Interactive Shell Usage"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To start learning CloudMonkey, the best is to use the interactive shell. "
"Simply type CloudMonkey at the prompt and you should get the interactive "
"shell."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"At the CloudMonkey prompt press the tab key twice, you will see all "
"potential verbs available. Pick on, enter a space and then press tab twice. "
"You will see all actions available for that verb"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"cloudmonkey&gt;\n"
"EOF        assign     cancel     create     detach     extract    ldap       prepare    reconnect  restart    shell      update     \n"
"activate   associate  change     delete     disable    generate   list       query      register   restore    start      upload     \n"
"add        attach     configure  deploy     enable     get        mark       quit       remove     revoke     stop       \n"
"api        authorize  copy       destroy    exit       help       migrate    reboot     reset      set        suspend    \n"
"cloudmonkey&gt;create \n"
"account                diskoffering           loadbalancerrule       portforwardingrule     snapshot               tags                   vpc\n"
"autoscalepolicy        domain                 network                privategateway         snapshotpolicy         template               vpcoffering\n"
"autoscalevmgroup       firewallrule           networkacl             project                sshkeypair             user                   vpnconnection\n"
"autoscalevmprofile     instancegroup          networkoffering        remoteaccessvpn        staticroute            virtualrouterelement   vpncustomergateway\n"
"condition              ipforwardingrule       physicalnetwork        securitygroup          storagenetworkiprange  vlaniprange            vpngateway\n"
"counter                lbstickinesspolicy     pod                    serviceoffering        storagepool            volume                 zone\n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Picking one action and entering a space plus the tab key, you will obtain "
"the list of parameters for that specific api call."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"cloudmonkey&gt;create network \n"
"account=            domainid=           isAsync=            networkdomain=      projectid=          vlan=               \n"
"acltype=            endip=              name=               networkofferingid=  startip=            vpcid=              \n"
"displaytext=        gateway=            netmask=            physicalnetworkid=  subdomainaccess=    zoneid=             \n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To get additional help on that specific api call you can use the following:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"cloudmonkey&gt;create network -h\n"
"Creates a network\n"
"Required args: displaytext name networkofferingid zoneid\n"
"Args: account acltype displaytext domainid endip gateway isAsync name netmask networkdomain networkofferingid physicalnetworkid projectid startip subdomainaccess vlan vpcid zoneid\n"
"\n"
"cloudmonkey&gt;create network -help\n"
"Creates a network\n"
"Required args: displaytext name networkofferingid zoneid\n"
"Args: account acltype displaytext domainid endip gateway isAsync name netmask networkdomain networkofferingid physicalnetworkid projectid startip subdomainaccess vlan vpcid zoneid\n"
"\n"
"cloudmonkey&gt;create network --help\n"
"Creates a network\n"
"Required args: displaytext name networkofferingid zoneid\n"
"Args: account acltype displaytext domainid endip gateway isAsync name netmask networkdomain networkofferingid physicalnetworkid projectid startip subdomainaccess vlan vpcid zoneid\n"
"cloudmonkey&gt;    \n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid "Note the required arguments necessary for the calls."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To find out the required parameters value, using a debugger console on the "
"&PRODUCT; UI might be very useful. For instance using Firebug on Firefox, "
"you can navigate the UI and check the parameters values for each call you "
"are making as you navigate the UI."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Starting a Virtual Machine instance with CloudMonkey"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"To start a virtual machine instance we will use the <emphasis>deploy "
"virtualmachine</emphasis> call."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"cloudmonkey&gt;deploy virtualmachine -h\n"
"Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.\n"
"Required args: serviceofferingid templateid zoneid\n"
"Args: account diskofferingid displayname domainid group hostid hypervisor ipaddress iptonetworklist isAsync keyboard keypair name networkids projectid securitygroupids securitygroupnames serviceofferingid size startvm templateid userdata zoneid\n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The required arguments are <emphasis>serviceofferingid, templateid and "
"zoneid</emphasis>"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"In order to specify the template that we want to use, we can list all "
"available templates with the following call:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"cloudmonkey&gt;list templates templatefilter=all\n"
"count = 2\n"
"template:\n"
"========\n"
"domain = ROOT\n"
"domainid = 8a111e58-e155-4482-93ce-84efff3c7c77\n"
"zoneid = e1bfdfaf-3d9b-43d4-9aea-2c9f173a1ae7\n"
"displaytext = SystemVM Template (XenServer)\n"
"ostypeid = 849d7d0a-9fbe-452a-85aa-70e0a0cbc688\n"
"passwordenabled = False\n"
"id = 6d360f79-4de9-468c-82f8-a348135d298e\n"
"size = 2101252608\n"
"isready = True\n"
"templatetype = SYSTEM\n"
"zonename = devcloud\n"
"...&lt;snipped&gt;\n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"In this snippet, I used DevCloud and only showed the beginning output of the"
" first template, the SystemVM template"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Similarly to get the <emphasis>serviceofferingid</emphasis> you would do:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"cloudmonkey&gt;list serviceofferings | grep id\n"
"id = ef2537ad-c70f-11e1-821b-0800277e749c\n"
"id = c66c2557-12a7-4b32-94f4-48837da3fa84\n"
"id = 3d8b82e5-d8e7-48d5-a554-cf853111bc50\n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"Note that we can use the linux pipe as well as standard linux commands "
"within the interactive shell. Finally we would start an instance with the "
"following call:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"\n"
"cloudmonkey&gt;deploy virtualmachine templateid=13ccff62-132b-4caf-b456-e8ef20cbff0e zoneid=e1bfdfaf-3d9b-43d4-9aea-2c9f173a1ae7 serviceofferingid=ef2537ad-c70f-11e1-821b-0800277e749c\n"
"jobprocstatus = 0\n"
"created = 2013-03-05T13:04:51-0800\n"
"cmd = com.cloud.api.commands.DeployVMCmd\n"
"userid = 7ed6d5da-93b2-4545-a502-23d20b48ef2a\n"
"jobstatus = 1\n"
"jobid = c441d894-e116-402d-aa36-fdb45adb16b7\n"
"jobresultcode = 0\n"
"jobresulttype = object\n"
"jobresult:\n"
"=========\n"
"virtualmachine:\n"
"==============\n"
"domain = ROOT\n"
"domainid = 8a111e58-e155-4482-93ce-84efff3c7c77\n"
"haenable = False\n"
"templatename = tiny Linux\n"
"...&lt;snipped&gt;\n"
"\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid "The instance would be stopped with:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"\n"
"cloudmonkey&gt;stop virtualmachine id=7efe0377-4102-4193-bff8-c706909cc2d2\n"
"    "
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The <emphasis>ids</emphasis> that you will use will differ from this "
"example. Make sure you use the ones that corresponds to your &PRODUCT; "
"cloud."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Scripting with CloudMonkey"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"All previous examples use CloudMonkey via the interactive shell, however it "
"can be used as a straightfoward CLI, passing the commands to the "
"<emphasis>cloudmonkey</emphasis> command like shown below."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$cloudmonkey list users"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"As such it can be used in shell scripts, it can received commands via stdin "
"and its output can be parsed like any other unix commands as mentioned "
"before."
msgstr ""
